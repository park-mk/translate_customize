{"version":3,"sources":["components/GlobalStyle.js","i18n/index.js","utils/index.js","subtitle/sub.js","subtitle/index.js","components/Upload.js","components/Help.js","components/Donate.js","components/Dialog.js","components/Header.js","components/Player.js","components/Tool.js","components/Subtitle.js","components/Main.js","utils/storage.js","translate/index.js","components/App.js","serviceWorker.js","index.js"],"names":["createGlobalStyle","zh","open","save","undo","clear","help","donate","confirm","delete","insert","merge","en","getExt","url","includes","split","trim","toLowerCase","pop","sleep","ms","Promise","resolve","setTimeout","secondToTime","seconds","DT","d2t","toFixed","timeToSecond","time","t2d","notify","text","type","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","Sub","start","end","this","startTime","endTime","clamp","Infinity","checkIsFile","source","File","getType","name","getVtt","a","getVttFromFile","getVttFromUrl","vttToUrl","vtt","URL","createObjectURL","Blob","file","reader","FileReader","onload","result","replace","assToVtt","srtToVtt","readAsText","fetch","response","ass","re_ass","RegExp","fixTime","map","item","index","arr","length","join","line","m","match","filter","srt","concat","getSubFromVttUrl","$video","document","createElement","$track","default","kind","appendChild","Array","from","track","cues","src","Upload","styled","div","player","options","setOption","updateSubtitles","openSubtitle","NProgress","set","vttText","subtitleUrl","subtitle","switch","uploadDialog","t","message","done","openVideo","videoUrl","canPlayType","className","value","disabled","spellCheck","onChange","event","target","files","Help","href","Donate","style","display","justifyContent","width","alt","Dialog","props","useState","activeName","setActiveName","useEffect","onClick","onClose","stopPropagation","title","children","Header","Left","Right","Logo","Menu","elink","download","body","click","removeChild","downloadFile","subtitles","Date","now","undoSubtitles","window","cleanSubtitles","helpDialog","donateDialog","Player","React","memo","setPlayer","setCurrentTime","height","option","loop","autoSize","aspectRatio","playbackRate","fullscreen","fullscreenWeb","miniProgressBar","moreVideoAttr","crossOrigin","preload","muted","autoplay","getInstance","art","requestAnimationFrame","playing","currentTime","on","Tool","language","translateSubtitles","timeOffsetSubtitles","Subtitle","choosestop","currentIndex","addSubtitle","updateSubtitle","checkSubtitle","removeSubtitle","translateSubtitle","isDroging","lastPageX","lastSub","lastKey","lastValue","onMouseDown","sub","key","pageX","onMouseMove","Number","onMouseUp","setWidth","setHeight","resize","useCallback","clientWidth","clientHeight","init","debounceResize","debounce","addEventListener","headerHeight","rowHeight","scrollToIndex","rowCount","rowGetter","headerRowRenderer","rowRenderer","rowData","duration","seek","marginBottom","flex","maxLength","unescape","Main","Storage","storage","JSON","parse","localStorage","getItem","Object","assign","get","setItem","stringify","removeItem","googleTranslate","query","lang","searchParams","append","then","data","json","catch","error","translate","limit","pLimit","all","history","inTranslation","worker","Worker","defaultLang","navigator","setLanguage","setCurrentIndex","setSubtitles","refe_subtitles","refe_setSubtitles","translationLanguage","setOptions","updateLang","setLocale","subs","saveToHistory","isEqual","shift","push","clone","postMessage","initSubtitles","storageSubs","onmessage","useMemo","findIndex","hasSubtitle","indexOf","copySubtitles","previous","check","splice","mergeSubtitle","next","removeSubtitles","Fragment","GlobalStyle","Boolean","location","hostname","setTranslations","i18n","configure","minimum","showSpinner","ReactDOM","render","test","userAgent","App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c36b2bd1.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n    html,\n    body,\n    #root {\n        height: 100%;\n    }\n\n    body {\n        font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji;\n        line-height: 1.5;\n        overflow: hidden;\n    }\n\n    *, *::before, *::after {\n        box-sizing: border-box;\n    }\n\n    #root {\n        display: flex;\n        flex-direction: column;\n        font-size: 14px;\n        color: #ccc;\n        background: #1c1f2f;\n    }\n\n    ::-webkit-scrollbar {\n        width: 5px;\n    }\n\n    ::-webkit-scrollbar-thumb {\n        background-color: #666;\n    }\n\n    ::-webkit-scrollbar-thumb:hover {\n        background-color: #ccc;\n    }\n`;\n","const en = {\n    open: 'Open',\n    save: 'Save',\n    undo: 'Undo',\n    clear: 'Clear',\n    help: 'Help',\n    donate: 'Donate',\n    confirm: 'Confirm',\n    delete: 'Delete',\n    insert: 'Insert Next',\n    merge: 'Merge Next',\n\n    'open-subtitle': 'Open Subtitle',\n    'open-subtitle-supports': 'Supports opening .vtt, .srt and .ass subtitle',\n    'open-subtitle-success': 'Open subtitles successfully',\n    'open-subtitle-error': 'Failed to open subtitles',\n\n    'open-video': 'Open Video',\n    'open-video-supports': 'Supports opening .mp4, .webm and .ogg video',\n    'open-video-warning':\n        'The files are opened locally and no data is uploaded. When creating an audio waveform, The browser may be blocked for a short time due to audio decoding',\n    'open-video-success': 'Open video successfully',\n    'open-video-error': 'Failed to open video',\n\n    'clear-warning': 'This step cannot be rolled back. Are you sure ?',\n    'clear-success': 'Clear all subtitles data successfully',\n\n    'help-info':\n        'This editor is suitable for video with small volume and simple subtitle effect. For large file videos or more subtitle effect, please use professional desktop software.',\n    'help-issue': 'You can ask any questions on Github Issue:',\n    'help-email': 'Or contact me via email:',\n\n    'donate-info':\n        'Or you can buy me a cup of coffee to encourage me to continue to update and improve the subtitle editor.',\n    'donate-weChatPay': 'WeChat Pay:',\n    'donate-alipay': 'Alipay:',\n\n    'history-rollback': 'History rollback successful',\n    'history-empty': 'History is empty',\n\n    'translation-success': 'Translation successful',\n    'translation-progress': 'Translation in progress',\n    'translation-limit': 'Limit 1000 translations per batch',\n\n    'audio-waveform': 'Audio Waveform:',\n    'file-size': 'File Size:',\n    'decoding-progress': 'Decoding Progress:',\n    'render-channel': 'Render Channel:',\n    'unit-duration': 'Unit Duration:',\n    'height-zoom': 'Height Zoom:',\n    'space-metronome': 'Space Metronome:',\n    'export-image': 'Export Image',\n    'parameter-error': 'Parameter error',\n    'keep-one': 'Please keep at least one subtitle',\n    'subtitle-text': '[Subtitle Text]',\n    'time-offset': 'Time Offset:',\n    'google-translate': 'Google Translate:',\n};\n\nconst zh = {\n    open: '打开',\n    save: '保存',\n    undo: '回退',\n    clear: '清除',\n    help: '帮助',\n    donate: '捐助',\n    confirm: '确定',\n\n    delete: '删除',\n    insert: '插入下一条',\n    merge: '合并下一条',\n\n    'open-subtitle': '打开字幕',\n    'open-subtitle-supports': '支持打开 .vtt, .srt 和 .ass 字幕',\n    'open-subtitle-success': '打开字幕成功',\n    'open-subtitle-error': '打开字幕失败',\n\n    'open-video': '打开视频',\n    'open-video-supports': '支持打开 .mp4, .webm 和 .ogg 视频',\n    'open-video-warning':\n        '文件均为本地打开，不会上传任何数据。创建音频波形时，浏览器可能会由于音频解码而在短时间内被阻塞',\n    'open-video-success': '打开视频成功',\n    'open-video-error': '打开视频失败',\n\n    'clear-warning': '此步骤无法回退，确定吗?',\n    'clear-success': '清除所有字幕数据成功',\n\n    'help-info': '该编辑器适用于体积小，字幕效果简单的视频。对于大文件视频或更多字幕效果，请使用专业的桌面软件。',\n    'help-issue': '您可以在Github问题上提出任何问题:',\n    'help-email': '或通过电子邮件与我联系:',\n\n    'donate-info': '或者，您可以给我买杯咖啡，以鼓励我继续更新和改进字幕编辑器。',\n    'donate-weChatPay': '微信支付:',\n    'donate-alipay': '支付宝:',\n\n    'history-rollback': '历史回退成功',\n    'history-empty': '历史是空的',\n\n    'translation-success': '翻译成功',\n    'translation-progress': '翻译正在进行',\n    'translation-limit': '每此限制1000条翻译',\n\n    'audio-waveform': '波形图:',\n    'file-size': '文件大小:',\n    'decoding-progress': '解码进度:',\n    'render-channel': '渲染声道:',\n    'unit-duration': '单位时长:',\n    'height-zoom': '高度缩放:',\n    'space-metronome': '空格节拍器:',\n    'export-image': '导出图像',\n    'parameter-error': '参数错误',\n    'keep-one': '请至少保留一个字幕',\n    'subtitle-text': '[字幕文字]',\n    'time-offset': '时间偏移:',\n    'google-translate': '谷歌翻译:',\n};\n\nexport default {\n    en,\n    zh,\n    'zh-cn': zh,\n    'zh-tw': zh,\n};\n\nexport const names = {\n    en: 'EN',\n    zh: '中',\n};\n\nexport const getName = key => {\n    return (\n        {\n            en: 'en',\n            zh: 'zh',\n            'zh-cn': 'zh',\n            'zh-tw': 'zh',\n        }[key] || 'en'\n    );\n};\n","import DT from 'duration-time-conversion';\nimport { toast } from 'react-toastify';\n\nexport function isMobile() {\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(window.navigator.userAgent);\n}\n\nexport function getExt(url) {\n    if (url.includes('?')) {\n        return getExt(url.split('?')[0]);\n    }\n\n    if (url.includes('#')) {\n        return getExt(url.split('#')[0]);\n    }\n\n    return url\n        .trim()\n        .toLowerCase()\n        .split('.')\n        .pop();\n}\n\nexport function sleep(ms = 0) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function secondToTime(seconds = 0) {\n    return DT.d2t(seconds.toFixed(3));\n}\n\nexport function timeToSecond(time) {\n    return DT.t2d(time);\n}\n\nexport function downloadFile(url, name) {\n    const elink = document.createElement('a');\n    elink.style.display = 'none';\n    elink.href = url;\n    elink.download = name;\n    document.body.appendChild(elink);\n    elink.click();\n    document.body.removeChild(elink);\n}\n\nexport function notify(text = '', type = 'info') {\n    // info success warning error default\n    return (\n        text.trim() &&\n        toast[type](text, {\n            position: 'top-center',\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n        })\n    );\n}\n\nexport function getKeyCode(event) {\n    const tag = document.activeElement.tagName.toUpperCase();\n    const editable = document.activeElement.getAttribute('contenteditable');\n    if (tag !== 'INPUT' && tag !== 'TEXTAREA' && editable !== '' && editable !== 'true') {\n        return Number(event.keyCode);\n    }\n}\n","import clamp from 'lodash/clamp';\nimport { timeToSecond, secondToTime } from '../utils';\n\nexport default class Sub {\n    constructor(start, end, text) {\n        this.start = start;\n        this.end = end;\n        this.text = text;\n    }\n\n    get check() {\n        return this.startTime >= 0 && this.endTime >= 0 && this.startTime < this.endTime;\n    }\n\n    get clone() {\n        return new Sub(this.start, this.end, this.text);\n    }\n\n    get startTime() {\n        return timeToSecond(this.start);\n    }\n\n    set startTime(time) {\n        this.start = secondToTime(clamp(time, 0, Infinity));\n    }\n\n    get endTime() {\n        return timeToSecond(this.end);\n    }\n\n    set endTime(time) {\n        this.end = secondToTime(clamp(time, 0, Infinity));\n    }\n\n    get duration() {\n        return (this.endTime - this.startTime).toFixed(3);\n    }\n}\n","import { getExt, secondToTime } from '../utils';\nimport Sub from './sub';\n\nexport function checkIsFile(source) {\n    return source instanceof File;\n}\n\nexport function getType(source) {\n    return checkIsFile(source) ? getExt(source.name) : getExt(source);\n}\n\nexport async function getVtt(source) {\n    if (checkIsFile(source)) {\n        return await getVttFromFile(source);\n    } else {\n        return await getVttFromUrl(source);\n    }\n}\n\nexport function vttToUrl(vtt) {\n    return URL.createObjectURL(\n        new Blob([vtt], {\n            type: 'text/vtt',\n        }),\n    );\n}\n\nexport function vttToUrlUseWorker() {\n    return URL.createObjectURL(\n        new Blob([\n            `onmessage = event => {\n                postMessage(URL.createObjectURL(\n                    new Blob([\n                        \\`WEBVTT\n\n                        \\${event.data.map((item, index) => \\`\n                        \\${index + 1}\n                        \\${item.start} --> \\${item.end}\n                        \\${item.text}\\`).join('\\\\n\\\\n')}\n                        \\`\n                    ], {\n                        type: 'text/vtt',\n                    }),\n                ))\n            }`,\n        ]),\n    );\n}\n\nexport function subToVtt(sub) {\n    return (\n        'WEBVTT\\n\\n' +\n        sub\n            .map((item, index) => {\n                return index + 1 + '\\n' + item.start + ' --> ' + item.end + '\\n' + item.text;\n            })\n            .join('\\n\\n')\n    );\n}\n\nexport async function getVttFromFile(file) {\n    return new Promise(resolve => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            switch (getType(file)) {\n                case 'vtt':\n                    resolve(reader.result.replace(/{[\\s\\S]*?}/g, ''));\n                    break;\n                case 'ass':\n                    resolve(assToVtt(reader.result));\n                    break;\n                case 'srt':\n                    resolve(srtToVtt(reader.result));\n                    break;\n                default:\n                    resolve();\n                    break;\n            }\n        };\n        reader.readAsText(file);\n    });\n}\n\nexport async function getVttFromUrl(url) {\n    return new Promise(async resolve => {\n        const response = await fetch(url);\n        const result = await response.text();\n        switch (getType(url)) {\n            case 'vtt':\n                resolve(result.replace(/{[\\s\\S]*?}/g, ''));\n                break;\n            case 'ass':\n                resolve(assToVtt(result));\n                break;\n            case 'srt':\n                resolve(srtToVtt(result));\n                break;\n            default:\n                resolve();\n                break;\n        }\n    });\n}\n\nexport function assToVtt(ass) {\n    const re_ass = new RegExp(\n        'Dialogue:\\\\s\\\\d,' +\n            '(\\\\d+:\\\\d\\\\d:\\\\d\\\\d.\\\\d\\\\d),' +\n            '(\\\\d+:\\\\d\\\\d:\\\\d\\\\d.\\\\d\\\\d),' +\n            '([^,]*),' +\n            '([^,]*),' +\n            '(?:[^,]*,){4}' +\n            '([\\\\s\\\\S]*)$',\n        'i',\n    );\n\n    function fixTime(time = '') {\n        return time\n            .split(/[:.]/)\n            .map((item, index, arr) => {\n                if (index === arr.length - 1) {\n                    if (item.length === 1) {\n                        return '.' + item + '00';\n                    } else if (item.length === 2) {\n                        return '.' + item + '0';\n                    }\n                } else {\n                    if (item.length === 1) {\n                        return (index === 0 ? '0' : ':0') + item;\n                    }\n                }\n\n                return index === 0 ? item : index === arr.length - 1 ? '.' + item : ':' + item;\n            })\n            .join('');\n    }\n\n    return (\n        'WEBVTT\\n\\n' +\n        ass\n            .split(/\\r?\\n/)\n            .map(line => {\n                const m = line.match(re_ass);\n                if (!m) return null;\n                return {\n                    start: fixTime(m[1].trim()),\n                    end: fixTime(m[2].trim()),\n                    text: m[5]\n                        .replace(/{[\\s\\S]*?}/g, '')\n                        .replace(/(\\\\N)/g, '\\n')\n                        .trim()\n                        .split(/\\r?\\n/)\n                        .map(item => item.trim())\n                        .join('\\n'),\n                };\n            })\n            .filter(line => line)\n            .map((line, index) => {\n                if (line) {\n                    return index + 1 + '\\n' + line.start + ' --> ' + line.end + '\\n' + line.text;\n                } else {\n                    return '';\n                }\n            })\n            .filter(line => line.trim())\n            .join('\\n\\n')\n    );\n}\n\nexport function srtToVtt(srt) {\n    return 'WEBVTT \\r\\n\\r\\n'.concat(\n        srt\n            .replace(/\\{\\\\([ibu])\\}/g, '</$1>')\n            .replace(/\\{\\\\([ibu])1\\}/g, '<$1>')\n            .replace(/\\{([ibu])\\}/g, '<$1>')\n            .replace(/\\{\\/([ibu])\\}/g, '</$1>')\n            .replace(/(\\d\\d:\\d\\d:\\d\\d),(\\d\\d\\d)/g, '$1.$2')\n            .replace(/{[\\s\\S]*?}/g, '')\n            .concat('\\r\\n\\r\\n'),\n    );\n}\n\nexport async function getSubFromVttUrl(url) {\n    return new Promise(resolve => {\n        const $video = document.createElement('video');\n        const $track = document.createElement('track');\n        $track.default = true;\n        $track.kind = 'metadata';\n        $video.appendChild($track);\n        $track.onload = () => {\n            resolve(\n                Array.from($track.track.cues).map(item => {\n                    const start = secondToTime(item.startTime);\n                    const end = secondToTime(item.endTime);\n                    const text = item.text;\n                    return new Sub(start, end, text);\n                }),\n            );\n        };\n        $track.src = url;\n    });\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport NProgress from 'nprogress';\nimport { notify } from '../utils';\nimport { getVtt, vttToUrl, getSubFromVttUrl } from '../subtitle';\nimport { t, Translate } from 'react-i18nify';\n\nconst Upload = styled.div`\n    .item {\n        margin-bottom: 20px;\n        .title {\n            color: #fff;\n            font-size: 14px;\n            padding: 5px 10px;\n            margin-bottom: 10px;\n            border-left: 2px solid #03a9f4;\n        }\n        .centent {\n            padding: 0 10px;\n            .upload {\n                position: relative;\n                margin-bottom: 10px;\n                .input {\n                    width: 100%;\n                    height: 30px;\n                    line-height: 30px;\n                    padding: 0 10px;\n                    outline: none;\n                    border: none;\n                    color: #fff;\n                    background-color: #363952;\n                }\n                .file {\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    position: absolute;\n                    top: 0;\n                    right: 0;\n                    bottom: 0;\n                    line-height: 1;\n                    height: 100%;\n                    width: 100px;\n                    color: #fff;\n                    background-color: #2196f3;\n\n                    input {\n                        position: absolute;\n                        left: 0;\n                        top: 0;\n                        right: 0;\n                        bottom: 0;\n                        width: 100%;\n                        height: 100%;\n                        opacity: 0;\n                    }\n                }\n            }\n            .info {\n                font-size: 12px;\n                color: rgba(255, 255, 255, 0.5);\n                margin-bottom: 10px;\n            }\n            .warning {\n                font-size: 12px;\n                padding: 5px;\n                color: #fff;\n                background-color: rgba(199, 81, 35, 0.5);\n                border: 1px solid rgba(199, 81, 35, 1);\n            }\n        }\n    }\n`;\n\nexport default function({ player, options, setOption, updateSubtitles }) {\n    async function openSubtitle(file) {\n        if (file) {\n            NProgress.start().set(0.5);\n            try {\n                const vttText = await getVtt(file);\n                if (vttText) {\n                    const subtitleUrl = vttToUrl(vttText);\n                    updateSubtitles(await getSubFromVttUrl(subtitleUrl));\n                    player.subtitle.switch(subtitleUrl);\n                    setOption({ subtitleUrl, uploadDialog: false });\n                    notify(t('open-subtitle-success'));\n                } else {\n                    notify(t('open-subtitle-error'), 'error');\n                }\n            } catch (error) {\n                notify(error.message, 'error');\n            }\n            NProgress.done();\n        }\n    }\n\n    function openVideo(file) {\n        if (file) {\n            NProgress.start().set(0.5);\n            if (typeof file === 'string') {\n                player.url = file;\n                setOption({ videoUrl: file, uploadDialog: false });\n                notify(t('open-video-success'));\n            } else {\n                const $video = document.createElement('video');\n                const canPlayType = $video.canPlayType(file.type);\n                if (canPlayType === 'maybe' || canPlayType === 'probably') {\n                    const videoUrl = URL.createObjectURL(file);\n                    player.url = videoUrl;\n                    setOption({ videoUrl: videoUrl, uploadDialog: false });\n                    notify(t('open-video-success'));\n                } else {\n                    notify(t('open-video-error'), 'error');\n                }\n            }\n            NProgress.done();\n        }\n    }\n\n    return (\n        <Upload>\n            <div className=\"item\">\n                <div className=\"title\">\n                    <Translate value=\"open-subtitle\" />\n                </div>\n                <div className=\"centent\">\n                    <div className=\"upload\">\n                        <input\n                            disabled\n                            value={options.subtitleUrl}\n                            type=\"text\"\n                            className=\"input\"\n                            spellCheck=\"false\"\n                            onChange={event => openSubtitle(event.target.value)}\n                        />\n                        <div className=\"file\">\n                            <Translate value=\"open\" />\n                            <input type=\"file\" onChange={event => openSubtitle(event.target.files[0])} />\n                        </div>\n                    </div>\n                    <div className=\"info\">\n                        <Translate value=\"open-subtitle-supports\" />\n                    </div>\n                </div>\n            </div>\n            <div className=\"item\">\n                <div className=\"title\">\n                    <Translate value=\"open-video\" />\n                </div>\n                <div className=\"centent\">\n                    <div className=\"upload\">\n                        <input\n                            disabled\n                            value={options.videoUrl}\n                            type=\"text\"\n                            className=\"input\"\n                            spellCheck=\"false\"\n                            onChange={event => openVideo(event.target.value)}\n                        />\n                        <div className=\"file\">\n                            <Translate value=\"open\" />\n                            <input type=\"file\" onChange={event => openVideo(event.target.files[0])} />\n                        </div>\n                    </div>\n                    <div className=\"info\">\n                        <Translate value=\"open-video-supports\" />\n                    </div>\n                    <div className=\"warning\">\n                        <Translate value=\"open-video-warning\" />\n                    </div>\n                </div>\n            </div>\n        </Upload>\n    );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Translate } from 'react-i18nify';\n\nconst Help = styled.div`\n    position: relative;\n    padding: 0 20px 20px;\n    font-size: 14px;\n\n    a {\n        color: #2196f3;\n    }\n`;\n\nexport default function() {\n    return (\n        <Help>\n            <p>\n                <Translate value=\"help-info\" />\n            </p>\n            <p>\n                <Translate value=\"help-issue\" />\n            </p>\n            <p>\n                <a href=\"https://github.com/zhw2590582/SubPlayer/issues\">\n                    https://github.com/zhw2590582/SubPlayer/issues\n                </a>\n            </p>\n            <p>\n                <Translate value=\"help-email\" />\n            </p>\n            <p>\n                <a href=\"mailto:laozhaochaguan@gmail.com\">laozhaochaguan@gmail.com</a>\n            </p>\n        </Help>\n    );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Translate } from 'react-i18nify';\n\nconst Donate = styled.div`\n    position: relative;\n    padding: 0 20px 20px;\n    font-size: 14px;\n\n    a {\n        color: #2196f3;\n    }\n`;\n\nexport default function() {\n    return (\n        <Donate>\n            <p>\n                <Translate value=\"donate-info\" />\n            </p>\n            <p>Paypal:</p>\n            <p>\n                <a href=\"https://www.paypal.me/harveyzack\">https://www.paypal.me/harveyzack</a>\n            </p>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                <div>\n                    <p>\n                        <Translate value=\"donate-weChatPay\" />\n                    </p>\n                    <p>\n                        <img style={{ width: 210 }} src=\"/wechatpay.jpg\" alt=\"WeChat Pay\" />\n                    </p>\n                </div>\n                <div>\n                    <p>\n                        <Translate value=\"donate-alipay\" />\n                    </p>\n                    <p>\n                        <img style={{ width: 210 }} src=\"/alipay.jpg\" alt=\"Alipay\" />\n                    </p>\n                </div>\n            </div>\n        </Donate>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nconst Dialog = styled.div`\n    position: fixed;\n    z-index: 99;\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: rgba(0, 0, 0, 0.8);\n\n    .dialog-inner {\n        min-height: 0px;\n        background-color: #1f2133;\n        border-radius: 3px;\n        overflow: hidden;\n        opacity: 0;\n        margin-top: -10px;\n        transition: all 0.2s ease 0s;\n        box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.5);\n\n        .dialog-title {\n            position: relative;\n            border-bottom: 1px solid #000;\n            background-color: #2a2c3c;\n            text-shadow: 0 1px 0 rgba(0, 0, 0, 0.5);\n            color: #fff;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            padding: 10px 0;\n            margin-bottom: 10px;\n            font-size: 16px;\n        }\n\n        .dialog-cancel {\n            position: absolute;\n            right: 10px;\n            top: 10px;\n            cursor: pointer;\n            opacity: 0.5;\n            transition: all 0.2s ease 0s;\n\n            &:hover {\n                opacity: 1;\n            }\n        }\n\n        &.dialog-active {\n            opacity: 1;\n            margin-top: 0;\n        }\n    }\n`;\n\nexport default function(props) {\n    const [activeName, setActiveName] = useState('');\n\n    useEffect(() => {\n        setTimeout(() => setActiveName('dialog-active'), 100);\n    }, []);\n\n    return (\n        <Dialog onClick={() => props.onClose()}>\n            <div\n                style={{ width: props.width || 500 }}\n                className={`dialog-inner ${activeName}`}\n                onClick={event => event.stopPropagation()}\n            >\n                <div className=\"dialog-title\">\n                    {props.title || 'Title'}{' '}\n                    <i className=\"dialog-cancel icon-cancel\" onClick={() => props.onClose()}></i>\n                </div>\n                <div className=\"dialog-content\">{props.children}</div>\n            </div>\n        </Dialog>\n    );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { names, getName } from '../i18n';\nimport Upload from './Upload';\nimport Help from './Help';\nimport Donate from './Donate';\nimport Dialog from './Dialog';\nimport { downloadFile } from '../utils';\nimport { vttToUrl, subToVtt } from '../subtitle';\nimport { t, Translate } from 'react-i18nify';\n\nconst Header = styled.div`\n    position: relative;\n    display: flex;\n    height: 50px;\n    align-items: center;\n    justify-content: space-between;\n    background-color: #1f2133;\n    border-bottom: 1px solid rgb(0, 0, 0);\n`;\n\nconst Left = styled.div`\n    display: flex;\n    align-items: center;\n    height: 100%;\n`;\n\nconst Right = styled.div`\n    display: flex;\n    align-items: center;\n    height: 100%;\n`;\n\nconst Logo = styled.a`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 22px;\n    height: 100%;\n    cursor: pointer;\n    padding: 0 15px;\n    color: rgba(255, 255, 255, 1);\n    transition: all 0.2s ease 0s;\n    border-right: 1px solid rgb(0, 0, 0);\n    text-shadow: 0 1px 0 rgba(0, 0, 0, 0.5);\n    text-decoration: none;\n\n    &:hover {\n        background-color: #2196f3;\n    }\n`;\n\nconst Menu = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 13px;\n    height: 100%;\n    cursor: pointer;\n    padding: 0 25px;\n    color: rgba(255, 255, 255, 1);\n    transition: all 0.2s ease 0s;\n    border-right: 1px solid rgb(0, 0, 0);\n    text-shadow: 0 1px 0 rgba(0, 0, 0, 0.5);\n\n    &:hover {\n        background-color: #2196f3;\n    }\n\n    i {\n        margin-right: 5px;\n    }\n`;\n\nconst I18n = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 13px;\n    height: 100%;\n    padding: 0 10px;\n    color: rgba(255, 255, 255, 1);\n    border-left: 1px solid rgb(0, 0, 0);\n    background-color: rgb(26, 83, 109);\n\n    i {\n        margin-right: 5px;\n    }\n\n    select {\n        outline: none;\n    }\n`;\n\nexport default function(props) {\n    return (\n        <Header>\n            <Left>\n                <Logo href=\"/\">\n                    <i className=\"icon-cc\"></i>\n                </Logo>\n                <Menu onClick={() => props.setOption({ uploadDialog: true })}>\n                    <i className=\"icon-upload\"></i>\n                    <Translate value=\"open\" />\n                </Menu>\n                <Menu onClick={() => downloadFile(vttToUrl(subToVtt(props.subtitles)), `${Date.now()}.vtt`)}>\n                    <i className=\"icon-download\"></i>\n                    <Translate value=\"save\" />\n                </Menu>\n                <Menu onClick={() => props.undoSubtitles()}>\n                    <i className=\"icon-ccw\"></i>\n                    <Translate value=\"undo\" />\n                </Menu>\n                <Menu\n                    onClick={() => {\n                        if (window.confirm(t('clear-warning'))) {\n                            props.cleanSubtitles();\n                        }\n                    }}\n                >\n                    <i className=\"icon-trash-empty\"></i>\n                    <Translate value=\"clear\" />\n                </Menu>\n              \n            </Left>\n            <Right>\n               {/* <I18n>\n                    <i className=\"icon-language\"></i>\n                    <select value={getName(props.language)} onChange={event => props.updateLang(event.target.value)}>\n                        {Object.keys(names).map(key => (\n                            <option key={key} value={key}>\n                                {names[key]}\n                            </option>\n                        ))}\n                    </select>\n                        </I18n>*/}\n            </Right>\n            {props.options.uploadDialog ? (\n                <Dialog title={t('open')} onClose={() => props.setOption({ uploadDialog: false })}>\n                    <Upload {...props} />\n                </Dialog>\n            ) : null}\n            {props.options.helpDialog ? (\n                <Dialog title={t('help')} onClose={() => props.setOption({ helpDialog: false })}>\n                    <Help {...props} />\n                </Dialog>\n            ) : null}\n            {props.options.donateDialog ? (\n                <Dialog title={t('donate')} onClose={() => props.setOption({ donateDialog: false })}>\n                    <Donate {...props} />\n                </Dialog>\n            ) : null}\n        </Header>\n    );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport ArtplayerComponent from 'artplayer-react';\n\nconst Player = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 120%;\n    width: 100%;\n    padding: 20px;\n    background-color: rgba(0, 0, 0, 0.5);\n`;\n\nexport default React.memo(\n    function({ options, setPlayer, setCurrentTime }) {\n        return (\n            <Player>\n                <ArtplayerComponent\n                   \n                    style={{\n                        width: '100%',\n                        height: '100%',\n                    }}\n                    option={{\n                        url: options.videoUrl,\n                        loop: true,\n                        autoSize: false,\n                        aspectRatio: true,\n                        \n                        playbackRate: true,\n                        fullscreen: true,\n                        fullscreenWeb: true,\n                        miniProgressBar: true,\n                        subtitle: {\n                            url: options.subtitleUrl,\n                        },\n                        moreVideoAttr: {\n                            crossOrigin: 'anonymous',\n                            preload: 'auto',\n                        },\n                        muted: false,\n                        autoplay: false,\n                      \n                        autoSize: true,\n                      \n                        setting: true,\n                        loop: true,\n                        playbackRate: true,\n                        aspectRatio: true,\n                        fullscreen: true,\n                        fullscreenWeb: true,\n                        mutex: true,\n                    }}\n                    getInstance={art => {\n                        setPlayer(art);\n\n                        (function loop() {\n                            window.requestAnimationFrame(() => {\n                                if (art.playing) {\n                                    setCurrentTime(art.currentTime);\n                                }\n                                loop();\n                            });\n                        })();\n\n                        art.on('seek', () => {\n                            setCurrentTime(art.currentTime);\n                        });\n                    }}\n                />\n            </Player>\n        );\n    },\n    () => true,\n);\n","import React from 'react';\nimport styled from 'styled-components';\nimport languages from '../translate/languages';\nimport { Translate } from 'react-i18nify';\n\nconst Tool = styled.div`\n    flex: 1;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    font-size: 13px;\n\n    .item {\n        display: flex;\n        align-items: center;\n        padding: 5px 10px;\n        border-bottom: 1px solid rgba(0, 0, 0, 0.4);\n\n        .value {\n            display: flex;\n            align-items: center;\n            select {\n                outline: none;\n                margin-left: 15px;\n            }\n            button {\n                height: 25px;\n                border: none;\n                padding: 0 10px;\n                margin-left: 15px;\n                outline: none;\n                cursor: pointer;\n                font-size: 12px;\n                color: #fff;\n                border-radius: 3px;\n                background-color: rgb(26, 83, 109);\n                transition: all 0.2s ease;\n                &:hover {\n                    color: #fff;\n                    background-color: #2196f3;\n                }\n                i {\n                    margin-right: 5px;\n                }\n            }\n        }\n    }\n`;\n\nexport default function({ language, options, setOption, translateSubtitles, timeOffsetSubtitles }) {\n    return (\n        <Tool>\n        \n        {/*    <div className=\"item\">\n          <div className=\"title\">\n                   <Translate value=\"google-translate\" />\n                </div>\n                <div className=\"value\">\n                    <select\n                        value={options.translationLanguage}\n                        onChange={event => setOption({ translationLanguage: event.target.value })}\n                    >\n                        {(languages[language] || languages.en).map(item => (\n                            <option key={item.key} value={item.key}>\n                                {item.name}\n                            </option>\n                        ))}\n                        \n                    </select>\n                    <button onClick={() => translateSubtitles()}>\n                        \n                        <Translate value=\"confirm\" />\n                    </button>\n                </div>\n                       \n                        </div>*/}\n            <div className=\"item\">\n                      {/*\n                <div className=\"title\">\n                    <Translate value=\"time-offset\" />\n                </div>\n\n                <div className=\"value\">\n                    <button onClick={() => timeOffsetSubtitles(-0.1)}>-100ms</button>\n                    <button onClick={() => timeOffsetSubtitles(0.1)}>+100ms</button>\n                    <button onClick={() => timeOffsetSubtitles(-1)}>-1000ms</button>\n                    <button onClick={() => timeOffsetSubtitles(1)}>+1000ms</button>\n                </div>\n                */}\n            </div>\n        </Tool>\n    );\n}\n","import React, { useEffect, useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Table } from 'react-virtualized';\nimport debounce from 'lodash/debounce';\nimport unescape from 'lodash/unescape';\nimport clamp from 'lodash/clamp';\nimport { timeToSecond, secondToTime } from '../utils';\n\nconst Subtitle = styled.div`\n    .ReactVirtualized__Table {\n        font-size: 12px;\n        .ReactVirtualized__Table__Grid {\n            outline: none;\n        }\n        .ReactVirtualized__Table__row {\n            transition: all 0.2s ease;\n            &.odd {\n                background-color: rgb(35, 40, 64);\n            }\n            &.highlight {\n                background-color: #2196f3;\n            }\n            &.illegal {\n                background-color: #c75123;\n            }\n            .row {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                flex-direction: column;\n                color: #fff;\n                height: 100%;\n                padding: 10px 5px;\n                border-bottom: 1px solid #000;\n            }\n        }\n\n        .input,\n        .textarea {\n            border: none;\n            width: 100%;\n            color: #fff;\n            font-size: 12px;\n            text-align: center;\n            background-color: rgba(0, 0, 0, 0.4);\n            border: 1px solid rgba(255, 255, 255, 0.1);\n            resize: none;\n            outline: none;\n        }\n        .textarea1 {\n            border: none;\n            width: 100%;\n            color: #fff;\n            font-size: 12px;\n            text-align: center;\n            background-color: rgba(0, 0, 0, 0.1);\n            border: 1px solid rgba(255, 255, 255, 0.1);\n            resize: none;\n            outline: none;\n        }\n\n        .input {\n            height: 25px;\n            line-height: 25px;\n            cursor: col-resize;\n            user-select: none;\n        }\n\n        .textarea {\n            padding: 5px;\n            height: 100%;\n            line-height: 1.5;\n        }\n        .textarea1 {\n            padding: 5px;\n            height: 100%;\n            line-height: 1.5;\n        }\n\n        .operation {\n            i {\n                font-size: 12px;\n                cursor: pointer;\n            }\n        }\n    }\n`;\n\nexport default function({\n    player,\n    choosestop,\n    subtitles,\n    addSubtitle,\n    currentIndex,\n    updateSubtitle,\n    removeSubtitle,\n    translateSubtitle,\n    checkSubtitle,\n}) {\n    let isDroging = false;\n    let lastPageX = 0;\n    let lastSub = null;\n    let lastKey = '';\n    let lastValue = '';\n\n    function onMouseDown(event, sub, key) {\n        isDroging = true;\n        lastPageX = event.pageX;\n        lastSub = sub;\n        lastKey = key;\n    }\n\n    function onMouseMove(event, sub, key) {\n        if (isDroging) {\n            const time = Number(((event.pageX - lastPageX) / 10).toFixed(3));\n            lastValue = secondToTime(clamp(timeToSecond(sub[key]) + time, 0, Infinity));\n        }\n    }\n\n    function onMouseUp() {\n        if (isDroging) {\n            if (lastSub && lastKey && lastValue) {\n                updateSubtitle(lastSub, lastKey, lastValue);\n            }\n            isDroging = false;\n            lastPageX = 0;\n            lastSub = null;\n            lastKey = '';\n            lastValue = '';\n        }\n    }\n\n    const [width, setWidth] = useState(100);\n    const [height, setHeight] = useState(100);\n\n    const resize = useCallback(() => {\n        setWidth(document.body.clientWidth / 2);\n        setHeight(document.body.clientHeight );\n    }, [setWidth, setHeight]);\n\n    useEffect(() => {\n        resize();\n        if (!resize.init) {\n            resize.init = true;\n            const debounceResize = debounce(resize, 500);\n            window.addEventListener('resize', debounceResize);\n        }\n    }, [resize]);\n\n    return (\n        <Subtitle>\n            <Table\n                headerHeight={40}\n                width={width}\n                height={height}\n                rowHeight={80}\n                scrollToIndex={currentIndex}\n                rowCount={subtitles.length}\n                rowGetter={({ index }) => subtitles[index]}\n                headerRowRenderer={() => null}\n                rowRenderer={props => {\n                    return (\n                        <div\n                            key={props.key}\n                            className={[\n                                props.className,\n                                props.index % 2 ? 'odd' : '',\n                                currentIndex === props.index ? 'highlight' : '',\n                                checkSubtitle(props.rowData) ? 'illegal' : '',\n                            ]\n                                .join(' ')\n                                .trim()}\n                            style={props.style}\n                            onClick={() => {\n                                 \n                               //  player.pause = true;\n                              \n\n                                if (player.duration >= props.rowData.startTime) {\n                                    player.seek = props.rowData.startTime + 0.001;\n                                }\n                            }}\n                        >\n                          {\n                          /*  <div className=\"row operation\" style={{ width: 30 }}>\n                                <i\n                                    className=\"icon-trash-empty\"\n                                    onClick={() => removeSubtitle(props.rowData)}\n                                    style={{ marginBottom: 5 }}\n                                ></i>\n                                <i\n                               \n                                    style={{ marginBottom: 15 }}\n                                ></i>\n                                <i className=\"icon-plus\" onClick={() => addSubtitle(props.index + 1)}></i>\n                            </div>\n                          */\n                          }\n                            <div className=\"row time\" style={{ width: 150 }} onMouseUp={onMouseUp}>\n                                <div\n                                    className=\"input\"\n                                   \n                                    onMouseDown={event => onMouseDown(event, props.rowData, 'start')}\n                                    onMouseMove={event => onMouseMove(event, props.rowData, 'start')}\n                            \n                    \n                               \n                                    style={{ marginBottom: 10 }}\n                                >\n                                    {props.rowData.start}\n                                </div>\n                                <div\n                                    className=\"input\"\n                                    onMouseDown={event => onMouseDown(event, props.rowData, 'end')}\n                                    onMouseMove={event => onMouseMove(event, props.rowData, 'end')}\n                                >\n                                    {props.rowData.end}\n                                </div>\n                            </div>\n                            <div className=\"row duration\" style={{ width: 70 }}>\n                                {props.rowData.duration}\n                            </div>\n                            <div className=\"row text\" style={{ flex: 1 }}>\n                                \n                                <textarea\n                                    maxLength={200}\n                                    spellCheck={false}\n                                    className=\"textarea1\"\n                                    value={unescape(props.rowData.text)}\n                                    onChange={event => updateSubtitle(props.rowData, 'text', event.target.value)}\n                                />\n                            </div>\n                            \n                            <div className=\"row text\" style={{ flex: 1 }}>\n                                \n                                <textarea\n                                    maxLength={200}\n                                    spellCheck={false}\n                                    className=\"textarea\"\n                                    value={unescape(props.rowData.text)}\n                                    onChange={event => updateSubtitle(props.rowData, 'text', event.target.value)}\n                                />\n                            </div>\n                        </div>\n                    );\n                }}\n            ></Table>\n        </Subtitle>\n    );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport Player from './Player';\nimport Tool from './Tool';\nimport Subtitle from './Subtitle';\n\nconst Main = styled.div`\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n    flex: 1;\n    border-bottom: 1px solid #000;\n`;\n\nconst Left = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n    width: 50%;\n    border-right: 1px solid #000;\n`;\n\nconst Right = styled.div`\n    display: flex;\n    height: 100%;\n    flex: 1;\n`;\n\nexport default function(props) {\n    return (\n        <Main>\n            <Left>\n                <Player {...props} />\n                <Tool {...props} />\n            </Left>\n            <Right>\n                <Subtitle {...props} />\n            </Right>\n        </Main>\n    );\n}\n","export default class Storage {\n    constructor() {\n        this.name = 'subplayer_settings';\n    }\n\n    get(key) {\n        const storage = JSON.parse(window.localStorage.getItem(this.name)) || {};\n        return key ? storage[key] : storage;\n    }\n\n    set(key, value) {\n        const storage = Object.assign({}, this.get(), {\n            [key]: value,\n        });\n        window.localStorage.setItem(this.name, JSON.stringify(storage));\n    }\n\n    del(key) {\n        const storage = this.get();\n        delete storage[key];\n        window.localStorage.setItem(this.name, JSON.stringify(storage));\n    }\n\n    clean() {\n        window.localStorage.removeItem(this.name);\n    }\n}\n","import NProgress from 'nprogress';\nimport pLimit from 'p-limit';\nimport { sleep, notify } from '../utils/index';\n\nexport function googleTranslate(query = '', lang) {\n    if (!query.trim()) return Promise.resolve('');\n    const url = new URL('https://translate.googleapis.com/translate_a/single');\n    url.searchParams.append('client', 'gtx');\n    url.searchParams.append('sl', 'auto');\n    url.searchParams.append('dt', 't');\n    url.searchParams.append('tl', lang);\n    url.searchParams.append('q', query);\n\n    return new Promise(resolve => {\n        sleep().then(async () => {\n            fetch(url.href)\n                .then(data => data.json())\n                .then(data => {\n                    if (data) {\n                        resolve(data[0].map(item => item[0].trim()).join('\\n'));\n                    } else {\n                        resolve('');\n                    }\n                })\n                .catch(error => {\n                    notify(error.message, 'error');\n                    resolve('');\n                });\n        });\n    });\n}\n\nexport default async function translate(subtitles, lang) {\n    NProgress.start();\n    const limit = pLimit(1);\n    let index = 0;\n\n    try {\n        const result = await Promise.all(\n            subtitles.map(item =>\n                limit(async () => {\n                    const data = await googleTranslate(item.text, lang);\n                    NProgress.set(++index / subtitles.length);\n                    if (data) {\n                        item.text = data;\n                    }\n                    return item;\n                }),\n            ),\n        );\n        NProgress.done();\n        return result;\n    } catch (error) {\n        NProgress.done();\n        notify(error.message, 'error');\n    }\n}\n","import React, { useState, useMemo, useCallback, useEffect } from 'react';\nimport GlobalStyle from './GlobalStyle';\nimport Header from './Header';\nimport Main from './Main';\n//import Footer from './Footer';\nimport Sub from '../subtitle/sub';\nimport clamp from 'lodash/clamp';\nimport { secondToTime, notify } from '../utils';\nimport { getSubFromVttUrl, vttToUrlUseWorker } from '../subtitle';\nimport Storage from '../utils/storage';\nimport isEqual from 'lodash/isEqual';\nimport NProgress from 'nprogress';\nimport { ToastContainer } from 'react-toastify';\nimport translate, { googleTranslate } from '../translate';\nimport { t, setLocale } from 'react-i18nify';\n\nconst history = [];\nlet inTranslation = false;\nconst storage = new Storage();\nconst worker = new Worker(vttToUrlUseWorker());\n\nexport default function() {\n    // Player instance\n    const [player, setPlayer] = useState(null);\n\n    // Language\n    const defaultLang = storage.get('language') || navigator.language.toLowerCase() || 'en';\n    const [language, setLanguage] = useState(defaultLang);\n\n    // Subtitle currently playing index\n    const [currentIndex, setCurrentIndex] = useState(-1);\n\n    // Subtitle currently playing time\n    const [currentTime, setCurrentTime] = useState(0);\n\n    // All subtitles\n    const [subtitles, setSubtitles] = useState([]);\n    const [refe_subtitles, refe_setSubtitles] = useState([]);\n\n    // All options\n    const [options, setOptions] = useState({\n        videoUrl: '/sample.mp4',\n        subtitleUrl: '/sample.vtt',\n        choosestop:false,\n        helpDialog: false,\n        donateDialog: false,\n        uploadDialog: false,\n        translationLanguage: 'en',\n    });\n\n    // Update language\n    const updateLang = useCallback(\n        value => {\n            setLocale(value);\n            setLanguage(value);\n            storage.set('language', value);\n        },\n        [setLanguage],\n    );\n\n    // Update an option\n    const setOption = useCallback(\n        option => {\n            setOptions({\n                ...options,\n                ...option,\n            });\n        },\n        [options, setOptions],\n    );\n\n    // Only way to update all subtitles\n    const updateSubtitles = useCallback(\n        (subs, saveToHistory = true) => {\n            if (subs.length && !isEqual(subs, subtitles)) {\n                setSubtitles(subs);\n\n                // Save 100 subtitles to history\n                if (saveToHistory) {\n                    if (history.length >= 100) {\n                        history.shift();\n                    }\n                    history.push(subs.map(sub => sub.clone));\n                }\n\n                // Save to storage\n                storage.set('subtitles', subs);\n\n                // Convert subtitles to vtt url\n                worker.postMessage(subs);\n            }\n        },\n        [setSubtitles, subtitles],\n    );\n\n    // Initialize subtitles from url or storage\n    const initSubtitles = useCallback(async () => {\n        const storageSubs = storage.get('subtitles');\n        if (storageSubs && storageSubs.length) {\n            updateSubtitles(storageSubs.map(item => new Sub(item.start, item.end, item.text)));\n        } else {\n            const subs = await getSubFromVttUrl(options.subtitleUrl);\n            updateSubtitles(subs);\n        }\n    }, [options.subtitleUrl, setSubtitles]);\n\n    const initrefeSubtitles = useCallback(async () => {\n      \n            const subs = await getSubFromVttUrl(options.subtitleUrl);\n            updateSubtitles(subs);\n      \n    }, [options.subtitleUrl, refe_setSubtitles]);\n\n    // Run only once\n    useEffect(() => {\n        initSubtitles();\n        updateLang(language);\n        if (player && !worker.onmessage) {\n            worker.onmessage = event => {\n                player.subtitle.switch(event.data);\n            };\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [player]);\n\n    // Update current index from current time\n    useMemo(() => {\n        setCurrentIndex(subtitles.findIndex(item => item.startTime <= currentTime && item.endTime > currentTime));\n    }, [subtitles, currentTime, setCurrentIndex]);\n\n    // Detect if the subtitle exists\n    const hasSubtitle = useCallback(sub => subtitles.indexOf(sub), [subtitles]);\n\n    // Copy all subtitles\n    const copySubtitles = useCallback(() => subtitles.map(sub => sub.clone), [subtitles]);\n\n    // Check if subtitle is legal\n    const checkSubtitle = useCallback(\n        sub => {\n            const index = hasSubtitle(sub);\n            if (index < 0) return;\n            const previous = subtitles[index - 1];\n            return (previous && sub.startTime < previous.endTime) || !sub.check;\n        },\n        [hasSubtitle, subtitles],\n    );\n\n    // Update a single subtitle\n    const updateSubtitle = useCallback(\n        (sub, key, value) => {\n            const index = hasSubtitle(sub);\n            if (index < 0) return;\n            const subs = copySubtitles();\n            const { clone } = sub;\n            if (typeof key === 'object') {\n                Object.assign(clone, key);\n            } else {\n                clone[key] = value;\n            }\n            if (clone.check) {\n                subs[index] = clone;\n                updateSubtitles(subs);\n            } else {\n                notify(t('parameter-error'), 'error');\n            }\n        },\n        [hasSubtitle, copySubtitles, updateSubtitles],\n    );\n\n    // Delete a subtitle\n    const removeSubtitle = useCallback(\n        sub => {\n            const index = hasSubtitle(sub);\n            if (index < 0) return;\n            const subs = copySubtitles();\n            if (subs.length === 1) {\n                return notify(t('keep-one'), 'error');\n            }\n            subs.splice(index, 1);\n            updateSubtitles(subs);\n        },\n        [hasSubtitle, copySubtitles, updateSubtitles],\n    );\n\n    // Add a subtitle\n    const addSubtitle = useCallback(\n        (index, sub) => {\n            const subs = copySubtitles();\n            if (sub) {\n                subs.splice(index, 0, sub);\n            } else {\n                const previous = subs[index - 1];\n                const start = previous ? secondToTime(previous.endTime + 0.1) : '00:00:00.001';\n                const end = previous ? secondToTime(previous.endTime + 1.1) : '00:00:01.001';\n                const sub = new Sub(start, end, t('subtitle-text'));\n                subs.splice(index, 0, sub);\n            }\n            updateSubtitles(subs);\n        },\n        [copySubtitles, updateSubtitles],\n    );\n\n    // Merge two subtitles\n    const mergeSubtitle = useCallback(\n        sub => {\n            const index = hasSubtitle(sub);\n            if (index < 0) return;\n            const subs = copySubtitles();\n            const next = subs[index + 1];\n            if (!hasSubtitle(next)) return;\n            const merge = new Sub(sub.start, next.end, sub.text + '\\n' + next.text);\n            subs[index] = merge;\n            subs.splice(index + 1, 1);\n            updateSubtitles(subs);\n        },\n        [hasSubtitle, copySubtitles, updateSubtitles],\n    );\n\n    // Remove all subtitles\n    const removeSubtitles = useCallback(() => {\n        updateSubtitles([new Sub('00:00:00.000', '00:00:01.000', t('subtitle-text'))]);\n    }, [updateSubtitles]);\n\n    // Undo subtitles\n    const undoSubtitles = useCallback(() => {\n        if (history.length > 1) {\n            history.pop();\n            const subs = history[history.length - 1];\n            updateSubtitles(subs, false);\n            notify(t('history-rollback'));\n        } else {\n            notify(t('history-empty'), 'error');\n        }\n    }, [updateSubtitles]);\n\n    // Subtitle time offset\n    const timeOffsetSubtitles = useCallback(\n        time => {\n            const subs = copySubtitles();\n            updateSubtitles(\n                subs.map(item => {\n                    item.start = secondToTime(clamp(item.startTime + time, 0, Infinity));\n                    item.end = secondToTime(clamp(item.endTime + time, 0, Infinity));\n                    return item;\n                }),\n            );\n            notify(`${t('time-offset')} ${time * 1000}ms`);\n        },\n        [copySubtitles, updateSubtitles],\n    );\n\n    // Clean all subtitles\n    const cleanSubtitles = useCallback(() => {\n        history.length = 0;\n        storage.set('subtitles', []);\n        removeSubtitles();\n        player.seek = 0;\n        notify(t('clear-success'));\n    }, [player, removeSubtitles]);\n\n    // Translate a subtitle\n    const translateSubtitle = useCallback(\n        async sub => {\n            if (!inTranslation) {\n                const index = hasSubtitle(sub);\n                if (index < 0) return;\n                try {\n                    inTranslation = true;\n                    NProgress.start().set(0.5);\n                    const text = await googleTranslate(sub.text, options.translationLanguage);\n                    if (text) {\n                        updateSubtitle(sub, 'text', text);\n                        notify(t('translation-success'));\n                    }\n                    inTranslation = false;\n                    NProgress.done();\n                } catch (error) {\n                    notify(error.message, 'error');\n                    inTranslation = false;\n                    NProgress.done();\n                }\n            } else {\n                notify(t('translation-progress'), 'error');\n            }\n        },\n        [hasSubtitle, updateSubtitle, options.translationLanguage],\n    );\n\n    // Translate all subtitles\n    const translateSubtitles = useCallback(async () => {\n        if (!inTranslation) {\n            const subs = copySubtitles();\n            if (subs.length && subs.length <= 1000) {\n                inTranslation = true;\n                try {\n                    updateSubtitles(await translate(subs, options.translationLanguage));\n                    notify(t('translation-success'));\n                    inTranslation = false;\n                } catch (error) {\n                    notify(error.message, 'error');\n                    inTranslation = false;\n                }\n            } else {\n                notify(t('translation-limit'), 'error');\n            }\n        } else {\n            notify(t('translation-progress'), 'error');\n        }\n    }, [copySubtitles, updateSubtitles, options.translationLanguage]);\n\n    const props = {\n        player,\n        options,\n\n        language,\n        subtitles,\n        currentTime,\n        currentIndex,\n        refe_subtitles,\n\n        setOption,\n        setPlayer,\n        setCurrentTime,\n        setCurrentIndex,\n\n        updateLang,\n        hasSubtitle,\n        addSubtitle,\n        checkSubtitle,\n        undoSubtitles,\n        mergeSubtitle,\n        removeSubtitle,\n        updateSubtitle,\n        cleanSubtitles,\n        updateSubtitles,\n        removeSubtitles,\n        translateSubtitle,\n        translateSubtitles,\n        timeOffsetSubtitles,\n    };\n\n    return (\n        <React.Fragment>\n            <GlobalStyle />\n            <Header {...props} />\n            <Main {...props} />\n\n          {\n          //  <Footer {...props} /> \n}\n          { // <ToastContainer />\n}\n        </React.Fragment>\n    );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport NProgress from 'nprogress';\nimport * as serviceWorker from './serviceWorker';\nimport { isMobile } from './utils';\nimport { setTranslations } from 'react-i18nify';\nimport i18n from './i18n';\nimport 'normalize.css';\nimport './fontello/css/fontello.css';\nimport 'nprogress/nprogress.css';\nimport 'react-virtualized/styles.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nsetTranslations(i18n);\nNProgress.configure({ minimum: 0, showSpinner: false });\nReactDOM.render(isMobile() ? 'SubPlayer does not support mobile access' : <App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}